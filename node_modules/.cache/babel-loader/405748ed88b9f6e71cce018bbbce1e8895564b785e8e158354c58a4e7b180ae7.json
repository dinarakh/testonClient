{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0434\\u0430\\\\\\u043F\\u0440\\u043E\\u0433\\u0438\\\\\\u0421\\u0410\\u0419\\u0422\\u042B\\\\zad\\\\Testone\\\\client\\\\src\\\\components\\\\ContactForm\\\\ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createContact } from '../api/contactApi';\nimport { getContacts } from '../api/contactApi'; // Импортируем функцию для получения контактов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = ({\n  setContacts\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newContact = {\n        name,\n        phone\n      };\n      await createContact(newContact);\n      setName('');\n      setPhone('');\n      alert('Contact added successfully!');\n\n      // После добавления нового контакта обновляем список контактов\n      const updatedContacts = await getContacts();\n      setContacts(updatedContacts);\n    } catch (error) {\n      console.error('Error adding contact:', error);\n      alert('Error adding contact');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"cDWl6483ledXZIvOmoKWuLy490M=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","createContact","getContacts","jsxDEV","_jsxDEV","ContactForm","setContacts","_s","name","setName","phone","setPhone","handleSubmit","e","preventDefault","newContact","alert","updatedContacts","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/dinar/OneDrive/Рабочий стол/да/проги/САЙТЫ/zad/Testone/client/src/components/ContactForm/ContactForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createContact } from '../api/contactApi';\r\nimport { getContacts } from '../api/contactApi'; // Импортируем функцию для получения контактов\r\n\r\nconst ContactForm = ({ setContacts }) => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newContact = { name, phone };\r\n      await createContact(newContact);\r\n      setName('');\r\n      setPhone('');\r\n      alert('Contact added successfully!');\r\n      \r\n      // После добавления нового контакта обновляем список контактов\r\n      const updatedContacts = await getContacts();\r\n      setContacts(updatedContacts);\r\n    } catch (error) {\r\n      console.error('Error adding contact:', error);\r\n      alert('Error adding contact');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add New Contact</h2>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Phone:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,UAAU,GAAG;QAAEP,IAAI;QAAEE;MAAM,CAAC;MAClC,MAAMT,aAAa,CAACc,UAAU,CAAC;MAC/BN,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZK,KAAK,CAAC,6BAA6B,CAAC;;MAEpC;MACA,MAAMC,eAAe,GAAG,MAAMf,WAAW,CAAC,CAAC;MAC3CI,WAAW,CAACW,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CF,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMgB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,IAAK;QACZoB,QAAQ,EAAGf,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAGf,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAClB,EAAA,CA9CIF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}