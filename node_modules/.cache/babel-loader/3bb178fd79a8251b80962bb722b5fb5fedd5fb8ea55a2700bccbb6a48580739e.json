{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0434\\u0430\\\\\\u043F\\u0440\\u043E\\u0433\\u0438\\\\\\u0421\\u0410\\u0419\\u0422\\u042B\\\\zad\\\\Testone\\\\client\\\\src\\\\components\\\\ContactList\\\\ContactList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getContacts } from '../../api/contactApi';\nimport Modal from '../Modal/Modal';\n\n// Определяем интерфейс для контакта\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  // Типизируем состояние как массив объектов типа Contact\n  const [contacts, setContacts] = useState([]);\n  const [modalActive, setModalActive] = useState(false);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        // Получаем данные из API и типизируем их как Contact[]\n        const data = await getContacts();\n        setContacts(data); // тип contacts уже соответствует Contact[]\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.name, \" - \", contact.phone, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalActive(true),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          active: modalActive,\n          setActive: setModalActive,\n          children: \"zxc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"Q+bj3ExSqnnV1ppuX2ivVwckCQk=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useEffect","useState","getContacts","Modal","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","modalActive","setModalActive","fetchContacts","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","name","phone","onClick","active","setActive","id","_c","$RefreshReg$"],"sources":["C:/Users/dinar/OneDrive/Рабочий стол/да/проги/САЙТЫ/zad/Testone/client/src/components/ContactList/ContactList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getContacts } from '../../api/contactApi';\r\nimport Modal from '../Modal/Modal';\r\n\r\n// Определяем интерфейс для контакта\r\ninterface Contact {\r\n  id: number;\r\n  name: string;\r\n  phone: string;\r\n}\r\n\r\nconst ContactList: React.FC = () => {\r\n  // Типизируем состояние как массив объектов типа Contact\r\n  const [contacts, setContacts] = useState<Contact[]>([]);\r\n  const [modalActive, setModalActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        // Получаем данные из API и типизируем их как Contact[]\r\n        const data = await getContacts();\r\n        setContacts(data); // тип contacts уже соответствует Contact[]\r\n      } catch (error) {\r\n        console.error('Error fetching contacts:', error);\r\n      }\r\n    };\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contact List</h2>\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name} - {contact.phone}\r\n            <button onClick={() => setModalActive(true)}>Добавить</button>\r\n            <Modal active={modalActive} setActive={setModalActive}>zxc</Modal>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,IAAI,GAAG,MAAMX,WAAW,CAAC,CAAC;QAChCO,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAW,QAAA,EACGR,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBjB,OAAA;QAAAW,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK,eAC/BnB,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAAC,IAAI,CAAE;UAAAK,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9Df,OAAA,CAACF,KAAK;UAACuB,MAAM,EAAEhB,WAAY;UAACiB,SAAS,EAAEhB,cAAe;UAAAK,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAH3DE,OAAO,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CAhCID,WAAqB;AAAAuB,EAAA,GAArBvB,WAAqB;AAkC3B,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}