{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/contacts';\n\n// Получение всех контактов\nexport const getContacts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    throw error;\n  }\n};\n\n// Создание нового контакта\nexport const createContact = async contact => {\n  try {\n    const response = await axios.post(API_URL, contact);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating contact:', error);\n    throw error;\n  }\n};\n\n// Удаление контакта\nexport const deleteContact = async id => {\n  try {\n    await axios.delete(`${API_URL}/${id}`);\n  } catch (error) {\n    console.error('Error deleting contact:', error);\n    throw error;\n  }\n};\n\n// Обновление контакта\nexport const updateContact = async (id, updatedContact) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, updatedContact);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating contact:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getContacts","response","get","data","error","console","createContact","contact","post","deleteContact","id","delete","updateContact","updatedContact","put"],"sources":["C:/Users/dinar/OneDrive/Рабочий стол/да/проги/САЙТЫ/zad/Testone/client/src/api/contactApi.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Contact } from '../types/contact';\r\n\r\nconst API_URL = 'http://localhost:5000/api/contacts';\r\n\r\n// Получение всех контактов\r\nexport const getContacts = async (): Promise<Contact[]> => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data as Contact[];\r\n  } catch (error) {\r\n    console.error('Error fetching contacts:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Создание нового контакта\r\nexport const createContact = async (contact: Omit<Contact, 'id'>): Promise<Contact> => {\r\n  try {\r\n    const response = await axios.post(API_URL, contact);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Удаление контакта\r\nexport const deleteContact = async (id: number): Promise<void> => {\r\n  try {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Обновление контакта\r\nexport const updateContact = async (id: number, updatedContact: Contact): Promise<Contact> => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, updatedContact);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAgC;EACzD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,OAA4B,IAAuB;EACrF,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,OAAO,CAAC;IACnD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAOC,EAAU,IAAoB;EAChE,IAAI;IACF,MAAMZ,KAAK,CAACa,MAAM,CAAC,GAAGZ,OAAO,IAAIW,EAAE,EAAE,CAAC;EACxC,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOF,EAAU,EAAEG,cAAuB,KAAuB;EAC5F,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,IAAIW,EAAE,EAAE,EAAEG,cAAc,CAAC;IACpE,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}