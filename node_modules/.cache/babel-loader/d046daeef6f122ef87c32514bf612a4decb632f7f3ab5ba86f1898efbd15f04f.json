{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0434\\u0430\\\\\\u043F\\u0440\\u043E\\u0433\\u0438\\\\\\u0421\\u0410\\u0419\\u0422\\u042B\\\\zad\\\\Testone\\\\client\\\\src\\\\components\\\\ContactList\\\\ContactList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getContacts, deleteContact } from '../../api/contactApi';\nimport Modal from '../Modal/Modal';\nimport DeleteNum from '../Modal/Delete/Delete';\nimport EditNum from '../Modal/Edit/Edit';\n\n// Определяем интерфейс для контакта\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  // Типизируем состояние как массив объектов типа Contact\n  const [contacts, setContacts] = useState([]);\n  const [modalActive, setModalActive] = useState(false);\n  const [contactToDelete, setContactToDelete] = useState(null);\n  const [modalActiveSecond, setModalActiveSecond] = useState(false);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const data = await getContacts();\n        setContacts(data);\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n\n  // Функция для открытия модального окна с выбранным контактом\n  const handleDeleteClick = contact => {\n    setContactToDelete(contact);\n    setModalActive(true); // Открываем модальное окно\n  };\n\n  // Функция для удаления контакта\n  const handleDeleteConfirm = async () => {\n    if (contactToDelete) {\n      try {\n        await deleteContact(contactToDelete.id); // Удаляем контакт через API\n        setContacts(contacts.filter(contact => contact.id !== contactToDelete.id)); // Обновляем список контактов\n        setModalActive(false); // Закрываем модальное окно\n      } catch (error) {\n        console.error('Error deleting contact:', error);\n      }\n    }\n  };\n  const handleDeleteCancel = () => {\n    setModalActive(false); // Закрываем модальное окно без удаления\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041D\\u043E\\u043C\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.name, \" - \", contact.phone, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteClick(contact),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: /*#__PURE__*/_jsxDEV(DeleteNum, {\n        contact: contactToDelete,\n        onDelete: handleDeleteConfirm,\n        onCancel: handleDeleteCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveSecond,\n      setActive: setModalActiveSecond,\n      children: /*#__PURE__*/_jsxDEV(EditNum, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"aJWTSmtfmNlXATwaJl502vjYRdw=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useEffect","useState","getContacts","deleteContact","Modal","DeleteNum","EditNum","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","modalActive","setModalActive","contactToDelete","setContactToDelete","modalActiveSecond","setModalActiveSecond","fetchContacts","data","error","console","handleDeleteClick","contact","handleDeleteConfirm","id","filter","handleDeleteCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","phone","onClick","active","setActive","onDelete","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/dinar/OneDrive/Рабочий стол/да/проги/САЙТЫ/zad/Testone/client/src/components/ContactList/ContactList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getContacts, deleteContact } from '../../api/contactApi';\r\nimport Modal from '../Modal/Modal';\r\nimport DeleteNum from '../Modal/Delete/Delete';\r\nimport EditNum from '../Modal/Edit/Edit';\r\n\r\n\r\n// Определяем интерфейс для контакта\r\ninterface Contact {\r\n  id: number;\r\n  name: string;\r\n  phone: string;\r\n}\r\n\r\nconst ContactList: React.FC = () => {\r\n  // Типизируем состояние как массив объектов типа Contact\r\n  const [contacts, setContacts] = useState<Contact[]>([]);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [contactToDelete, setContactToDelete] = useState<Contact | null>(null);\r\n  const [modalActiveSecond, setModalActiveSecond] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const data = await getContacts();\r\n        setContacts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching contacts:', error);\r\n      }\r\n    };\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  // Функция для открытия модального окна с выбранным контактом\r\n  const handleDeleteClick = (contact: Contact) => {\r\n    setContactToDelete(contact);\r\n    setModalActive(true); // Открываем модальное окно\r\n  };\r\n\r\n  // Функция для удаления контакта\r\n  const handleDeleteConfirm = async () => {\r\n    if (contactToDelete) {\r\n      try {\r\n        await deleteContact(contactToDelete.id); // Удаляем контакт через API\r\n        setContacts(contacts.filter(contact => contact.id !== contactToDelete.id)); // Обновляем список контактов\r\n        setModalActive(false); // Закрываем модальное окно\r\n      } catch (error) {\r\n        console.error('Error deleting contact:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setModalActive(false); // Закрываем модальное окно без удаления\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Номера</h2>\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name} - {contact.phone}\r\n            <button onClick={() => handleDeleteClick(contact)}>Удалить</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Модальное окно удаления */}\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <DeleteNum\r\n          contact={contactToDelete}\r\n          onDelete={handleDeleteConfirm}\r\n          onCancel={handleDeleteCancel}\r\n        />\r\n      </Modal>\r\n      <Modal active={modalActiveSecond} setActive={setModalActiveSecond}>\r\n        <EditNum/>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}